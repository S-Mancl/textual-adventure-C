
int rolld(int a);
int get_gold_pieces(const int portafogli);
int get_silver_pieces(const int portafogli);
int get_copper_pieces(const int portafogli);
void print_map( const map * mappa);
int save_to_file(const map * mappa, const inv * invent, const spbook * spb, const int *current, const int *previous,const int *portafogli);
void clean (char * filename);
int load_from_file( map * mappa, inv * invent, spbook * spb,int *current,int *previous,int *portafogli);
int regen_money(map * mappa);
void learn(spel * spell, char * nome, char * descrizione, char * effetto, element  elemento, char * fallimento);
void load(item * oggetto, char * nome, char * descrizione, char * uso, char * fallimento);
void createPlace(posto * place, char * nome, char * descrizione, int N, int S, int E, int O, char* desc0, char * desc1, char * desc2, char * desc3, char*move0,char *move1, char*move2, char*move3, int objavail, int objcode);
void altStatus(posto * place, stato current_status, char * firedesc, char * icedesc, char * devdesc,char * availableObjDescr, int spellAvailable, int codeSpell,int money,int regen);
void print_item_desc(const inv * invent, const int subaction);
void print_spell_desc(const spbook * spb, const int subaction);
void print_spell_name(const spbook * spb,const int subaction);
void print_item_name(const inv * invent,const int subaction);
void print_inventory(const inv * invent);
void print_spellbook(const spbook * spb);
void print_possibleMoves(const posto * loc);
int ask_for_object(void);

int ask_for_spell(void);
int ask_for_dir(void);
void print_possibleActions(void);
int get_action(void);
int ask_again(void);
int call_sub_prompt(int *action, map * mappa, inv * invent, spbook * spb, int * current);
int check_input(int action, int subaction,map * mappa,inv * invent, spbook * spb,int current);
void prompt(int* action, int * subaction, map * mappa, inv * invent, spbook * spb, int * current);
void cast_spell(int action, int subaction, map * mappa, inv * invent, spbook * spb, int * current, int * previous);
void use_item(int action, int subaction, map *mappa, inv *invent, spbook * spb, int current, int previous);
void try_get_item(map * mappa, int current,inv * invent);
void try_get_spell(map* mappa, int current, spbook* spb);
void move(int *current, map * mappa, int subaction);
void print_financial_status(const int* portafogli);
void exec_input(int action, int subaction, map* mappa, inv * invent, spbook * spb,int * current, int * previous, int * portafogli,int* we_re_playing,sett*settings);
void describe_desc_status(int * current, map * mappa);
int is_to_tell(int * current, int * previous, map * mappa, int * prevStatus);
int there_is_obj(map* mappa,int * current);
int there_is_spell(map* mappa, int * current);
void describe_presence_obj(map* mappa,int current,sett*settings);
void describe_presence_spell(sett*settings);
int is_random_enc_loc(map * mappa, int current);
int encCode(map* mappa, int current);
void print_local_money(map * mappa, int current);
void describe(int * current, int * previous, map * mappa, int * prevStatus, inv * invent, spbook * spb,sett*settings);
void get_local_money(int * portafogli, map * mappa, int current);
int is_encounter_location(map * mappa, int current);
void mainLoop(int * action, int * subaction, inv * invent, spbook * spb, int * current, int * previous, map * mappa, int * prevStatus, int * died, bestiary * bestiario, int * portafogli,sett*settings);
void setup_item_spells(inv* inventario, spbook* spellbook);
void piromane(void);
void teletrasporto_(void);
void trentatre(void);
void cento_posti(void);
void setup(map * mappa, bestiary * bestiario, inv * inventario, spbook * spellbook);