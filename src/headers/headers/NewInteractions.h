void random_question(int * vite);
void start_quiz(map * mappa, int * current, inv * inventario, spbook * spb,bestiary * bestiario, int * died);
void newNPC(personaggio * NPC, char * nome, char* descrizione,type categoria, orient orientamento);
void caratteristiche(personaggio *NPC, int inte,int forz, int dex, int vol, int cos);
void vitaResistenze(personaggio *NPC, resistenza fred,resistenza cald,resistenza fisic, resistenza necro, resistenza forz, life sal);
void trigger_random_encounter(int encounter_code);
void print_possible_distractions(const spbook * spb);
int ask_for_distraction(void);
int luci (const personaggio NPC);
int sonno (const personaggio NPC);
int suggestione(const personaggio NPC);
int try_esc(const personaggio NPC, const int scelta);
int try_to_escape(const spbook * spb, const personaggio NPC);
void print_possible_attacks(const inv * inventario, const spbook * spb);
int ask_for_attack(void);
int dardo(const inv * inventario, const spbook * spb, const personaggio * NPC);
int demone_evo(const inv * inventario, const spbook * spb, const personaggio * NPC);
int ice(const inv * inventario, const spbook * spb, const personaggio * NPC);
int infliggi(const inv * inventario, const spbook * spb, const personaggio * NPC);
int missile(const inv * inventario, const spbook * spb, const personaggio * NPC);
int pugnale(const inv * inventario, const spbook * spb, const personaggio * NPC);
int ascia(const inv * inventario, const spbook * spb, const personaggio * NPC);
int martello(const inv * inventario, const spbook * spb, const personaggio * NPC);
int lancia(const inv * inventario, const spbook * spb, const personaggio * NPC);
int attack_successful(const inv * inventario, const spbook * spb, personaggio * NPC,const int attack);
void attack(const inv * inventario, const spbook * spb, personaggio * NPC);
void print_possible_defenses(const inv * inventario,const spbook * spb);
int ask_for_defense(void);
int armatura_oggetto(const inv * inventario, const spbook * spb, const personaggio * NPC);
int scudo_oggetto(const inv * inventario, const spbook * spb, const personaggio * NPC);
int scudo_spell(const inv * inventario, const spbook * spb, const personaggio * NPC);
int armatura_spell(const inv * inventario, const spbook * spb, const personaggio * NPC);
int assorbi_elem(const inv * inventario, const spbook * spb, const personaggio * NPC);
int defense_successful(const inv * inventario, const spbook * spb, const personaggio * NPC,const int defense);
void cure(const spbook * spb, life * life_PG);
void defend(const inv * inventario, const spbook * spb, const personaggio * NPC, life *life_PG);
void fight(map * mappa, int * current, inv * inventario, spbook * spb, bestiary * bestiario, int * died);
void encounter(map * mappa, int * current, inv * inventario, spbook * spb, bestiary * bestiario, int * died,sett*settings);
void setEncounter(posto * loc, int is_encounter_location, int encounter_code);
void print_life(life life_NPC, life salute);